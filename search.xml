<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Lint found fatal errors while assembling a release target</title>
    <url>/2020/11/23/apk-release-lint/</url>
    <content><![CDATA[<p><strong>转载文章 原文链接：<a href="https://www.jianshu.com/p/6b82ddbeab5d">https://www.jianshu.com/p/6b82ddbeab5d</a></strong></p>
<p>Android在debug模式下应用没有问题，但是在打包release版本时出现一下问题：</p>
<p><img src="/imgs/apk-release-lint-reason.webp"></p>
<p>提示中，关闭lint checkReleaseBuilds 的检查，可以这样实现：</p>
<p><img src="/imgs/1.webp"></p>
<p>虽然这样可以解决问题，但是没有解决根本问题。也就是说隐患依旧会存在。</p>
<p>lint 是代码检查，可以优化代码，发现一些潜在的bug，所以尽量不要关闭</p>
<p>这个错误报告会生成在</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[app module]&#x2F;build&#x2F;reports&#x2F;lint-results-yourBuildName-fatal.html </span><br></pre></td></tr></table></figure>

<p>打开这个网页，一定要用浏览器打开。</p>
<p><img src="/imgs/2.webp"></p>
<p>这样错误就很明显了，改掉即可。</p>
]]></content>
      <categories>
        <category>Android开发问题汇总</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>release</tag>
        <tag>lint</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 更换 APP Logo 无效问题处理</title>
    <url>/2020/11/24/app-logo-invalid/</url>
    <content><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>在 AndroidManifest.xml 文件中，修改 APP logo 后，桌面显示的图标还是以前的图标，新修改的 logo 未生效</p>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>确保修改 logo 的方式正确</p>
<p>正常情况下，APP logo 修改无效的情况是不会出现的</p>
<p>楼主使用的测试机是被刷机过的，导致某些系统文件缺失</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在手机系统【设置】中，找到【应用程序】，并找到安装的应用，点击【清除数据】，再点击【清除缓存】，然后将应用卸载。</p>
<blockquote>
<p>每个品牌手机清除应用数据的方式或菜单可能不一样，但原理都是一样的，即将应用的全部数据清除，然后再将应用卸载。</p>
</blockquote>
<p>打开开发项目，先将项目【clean】，然后再【rebuild】，之后重新向手机安装应用即可。</p>
]]></content>
      <categories>
        <category>Android开发问题汇总</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>logo</tag>
        <tag>app</tag>
        <tag>logo更换无效</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio 设置国内镜像网站</title>
    <url>/2020/11/23/as-http-proxy/</url>
    <content><![CDATA[<p><strong>转载文章 原文链接：<a href="https://www.jianshu.com/p/0936af70cda3">https://www.jianshu.com/p/0936af70cda3</a></strong></p>
<p>我们平时在使用android studio时，难免需要从android官网下载一些项目运行所需要的SDK文件，但是因为android官网在国外，访问起来会比较慢，所以配置国内android官网镜像网站可以提高下载速度，这里比较常用的android镜像网站是电子科技大学的镜像网站：mirrors.dormforce.net 端口：80</p>
<p>通过File=》Setting=》Appearance &amp; Behavior =》System Settings =》Http Proxy，选择Auto-detect proxy settings，并且填写URL为：mirrors.dormforce.net :80，点击clear passwords，最后点击OK保存设置即可</p>
<p><img src="/imgs/4.webp"></p>
]]></content>
      <categories>
        <category>Android开发基础</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Android Studio</tag>
        <tag>国内镜像网站访问地址</tag>
      </tags>
  </entry>
  <entry>
    <title>我的 CSDN 博客 https://blog.csdn.net/zhaikun68</title>
    <url>/2020/11/19/blog-csdn/</url>
    <content><![CDATA[<p>文章同步更新至 CSDN 博客 <a href="https://blog.csdn.net/zhaikun68">我的 CSDN 博客</a></p>
]]></content>
      <categories>
        <category>CSDN博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>CSDN</tag>
      </tags>
  </entry>
  <entry>
    <title>站点访问人数 Buszanui 插件数据统计错误</title>
    <url>/2020/11/18/buszanui-visitor-count/</url>
    <content><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在使用 Hexo 搭建博客时，在博客中集成了站点访问数据量统计插件 <a href="http://busuanzi.ibruce.info/">busuanzi</a>。在本地启动服务后，统计数据错误。</p>
<blockquote>
<p>本地服务中，busuanzi 统计的数据信息未从0开始且起始数据显示过于庞大</p>
</blockquote>
<h2 id="busuanzi-站点起始统计数据"><a href="#busuanzi-站点起始统计数据" class="headerlink" title="busuanzi 站点起始统计数据"></a>busuanzi 站点起始统计数据</h2><p><img src="/imgs/busuanzi-visitor-count-website.png"></p>
<h2 id="busuanzi-页面起始统计数据"><a href="#busuanzi-页面起始统计数据" class="headerlink" title="busuanzi 页面起始统计数据"></a>busuanzi 页面起始统计数据</h2><p><img src="/imgs/busuanzi-visitor-count-post.png"></p>
<h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>静态网站是无后台服务支撑的，大多数情况下都需要借助第三方的插件实现相关功能。</p>
<p>上述的问题是在本地项目执行命令：Hexo s，后产生的，具体的原因博主也没有弄清楚。猜测是在本地部署时，busuanzi 自身的初始化数据，或是博客主题（butterfly）中的初始化数据…</p>
<blockquote>
<p>将项目部署到静态网站后，busuanzi 数据统计正常</p>
</blockquote>
<p>总结：busuanzi 数据统计不能依赖于本地服务</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>博客部署到相关的静态网站即可</p>
<h2 id="静态网站"><a href="#静态网站" class="headerlink" title="静态网站"></a>静态网站</h2><ul>
<li>GitHub Page</li>
<li>Gitee Page</li>
<li>Coding</li>
</ul>
]]></content>
      <categories>
        <category>Hexo配置问题汇总</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Buszanui</tag>
        <tag>站点数据统计</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + Coding 搭建博客之自定义域名的坑</title>
    <url>/2020/11/18/coding-dns/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Hexo 搭建的博客一般都是托管到第三方网站，如GitHub、Gitee、Coding。</p>
<p>通常情况下，大多数教程或者是 Hexo 官网都介绍的是部署到 GitHub，但众所周知，GitHub的访问速度实在跟不上节奏，故而出现了双访问通道的部署方式：</p>
<ul>
<li>国内线路部署到 Coding</li>
<li>国外线路部署到 GitHub</li>
</ul>
<p>本文主要讨论部署到 Coding 时，应注意的细节。</p>
<h1 id="Hexo-部署到-Coding-的大致流程"><a href="#Hexo-部署到-Coding-的大致流程" class="headerlink" title="Hexo 部署到 Coding 的大致流程"></a>Hexo 部署到 Coding 的大致流程</h1><p>1 申请 <a href="https://e.coding.net/login">Coding</a> 账号</p>
<p>2 在 Coding 创建项目</p>
<p>3 本地 Hexo 项目提交至 Coding</p>
<p>4 Coding 部署静态网站</p>
<p>具体流程官网文档已经很详细了<a href="https://help.coding.net/docs/pages/practice/hexo.html">快速搭建 Hexo 个人博客</a></p>
<h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>官方文档<a href="https://help.coding.net/docs/pages/operating/customize.html">自定义域名配置</a></p>
<p>为什么要自定义域名：</p>
<ul>
<li>Coding 部署出来的静态网站访问地址不太友好，比如我的博客地址：<a href="https://coding-pages-bucket-3488949-8014283-4889-371964-1304213829.cos-website.ap-hongkong.myqcloud.com/">https://coding-pages-bucket-3488949-8014283-4889-371964-1304213829.cos-website.ap-hongkong.myqcloud.com/</a></li>
<li>在自定义的域名中可设置站点访问路线，优化访问速度</li>
<li>可视化的域名，比如我的自定义的域名<a href="https://karenchia.net/">https://karenchia.net/</a></li>
</ul>
<h1 id="自定义域名采坑记录"><a href="#自定义域名采坑记录" class="headerlink" title="自定义域名采坑记录"></a>自定义域名采坑记录</h1><p>按照官网所给的文档完成自定义域名后，使用自定义的域名即可访问站点。</p>
<blockquote>
<p>如果自定义的域名需要修改，必须在域名修改成功后，再次将本地的 Hexo 项目重新部署到 Coding。</p>
</blockquote>
<p>本地站点，一定要先执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>然后重新编译文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<p>再将站点部署到 Coding</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p><strong>如果这样还是无法访问，重复以上步骤，多试几次…</strong></p>
<hr>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://blog.csdn.net/victoryxa/article/details/104286462">Hexo博客部署到码云和Coding</a></p>
]]></content>
      <categories>
        <category>Hexo配置问题汇总</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Coding</tag>
        <tag>自定义域名</tag>
        <tag>域名解析</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Fragment中嵌套Fragment，不显示</title>
    <url>/2020/11/23/fragment-child-fragment/</url>
    <content><![CDATA[<p><strong>转载文章 原文链接：<a href="https://www.jianshu.com/p/e146698482f5">https://www.jianshu.com/p/e146698482f5</a></strong></p>
<p>先看一段错误代码，这段代码写在一个 Fragment 中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void initView()&#123;</span><br><span class="line">    mViewPageAdpater &#x3D; new ViewPageAdpater( getFragmentManager() );</span><br><span class="line">    </span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title1&quot; );</span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title2&quot; );</span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title3&quot; );</span><br><span class="line">    </span><br><span class="line">    mViewPageAdpater.setFragments( mFragments, mTitles );       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码看上去一切正常，但是有时候就是好好的就是现实不出来，找来找去死活找不到原因。<br>一切东西都是普通的再不普通不过的 List 或者 Adapter，List这么简单的东西还能出问题？<br>那就是Adapter的问题了，Adapter里面实现的不对吗？也没有问题啊，就那么简单的几个方法。</p>
<p>最后终于发现，问题就在 new ViewPageAdpater( getFragmentManager() ); 这里。</p>
<p>之前就知道 fragment中嵌套fragment 应该使用 getChildFragmentManager() ，每次用起来都是忘了。<br>自己把自己丢坑里去了。<br>发现了之后，清楚的想起了，自己之前被坑过一次，这次又…………</p>
<p>正确的写法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void initView()&#123;</span><br><span class="line">    mViewPageAdpater &#x3D; new ViewPageAdpater( getChildFragmentManager() );</span><br><span class="line">    </span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title1&quot; );</span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title2&quot; );</span><br><span class="line">    mFragments.add( new BoonListFragment() );</span><br><span class="line">    mTitles.add( &quot;title3&quot; );</span><br><span class="line">    </span><br><span class="line">    mViewPageAdpater.setFragments( mFragments, mTitles );       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以后每当在 Fragment 中要用到 FragmentManager 的时候一定要记住，使用 getChildFragmentManager()。</p>
]]></content>
      <categories>
        <category>Android开发问题汇总</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>fragment</tag>
        <tag>child fragment</tag>
        <tag>嵌套</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo独立博客配置</category>
      </categories>
      <tags>
        <tag>HexoDemo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + Butterfly + GitHub/Coding 搭建个人独立博客</title>
    <url>/2020/11/18/hexo-set-up/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自从在CSDN写博客以来，开始慢慢觉得应该拥有一个属于自己的博客网站，期间折腾了很多次，结果都不了了知，最近终于将这颗浮躁的心安抚了下来，咱还是做一个有始有终的程序员。</p>
<p>起初写博客只是为了记录自己在平时开发过程中的经历，那些踩过的坑，还有那些优秀的框架。后面逐渐感受到学会一个新的知识点不容易，将这个知识点说得清楚，道得明白，更是不易，写博客也是对自己的一个提高。</p>
<p>在此之前虽然写过一些博客，但内容着实不丰富，也体会到了创作的不易，期待后续能够推出一些高质量的博文。</p>
<p>下面我们开始进入今天的正题。。。</p>
<h1 id="搭建平台"><a href="#搭建平台" class="headerlink" title="搭建平台"></a>搭建平台</h1><p>基于 GitHub + Hexo + NexT 搭建个人博客</p>
<ul>
<li>GitHub 个人博客静态网页托管平台</li>
<li>Hexo 快速、简洁且高效的博客框架，搭建本地静态网页站点</li>
<li>NexT 个人博客主题，样式多样化、功能多样化</li>
</ul>
<h1 id="在使用-Hexo-之前，需要先注册-GitHub-账号"><a href="#在使用-Hexo-之前，需要先注册-GitHub-账号" class="headerlink" title="在使用 Hexo 之前，需要先注册 GitHub 账号"></a>在使用 Hexo 之前，需要先注册 GitHub 账号</h1><p><a href="https://github.com/">注册 GitHub 账号</a></p>
<h1 id="安装配置-Hexo"><a href="#安装配置-Hexo" class="headerlink" title="安装配置 Hexo"></a>安装配置 Hexo</h1><p>Hexo 官方提供了多种主题配置，这里我选择了、、、</p>
<p><a href="https://hexo.io/zh-cn/">Hexo 官方教程</a></p>
<h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p><a href="http://theme-next.iissnan.com/theme-settings.html">NexT 主题配置官网</a></p>
<h5 id="这里为什么不详细介绍安装过程？"><a href="#这里为什么不详细介绍安装过程？" class="headerlink" title="这里为什么不详细介绍安装过程？"></a>这里为什么不详细介绍安装过程？</h5><p>官网文档已经将各类配置信息描述得非常清楚，文章中另说明在配置过程中需要注意的问题。</p>
<h1 id="搭建过程中需要注意的问题"><a href="#搭建过程中需要注意的问题" class="headerlink" title="搭建过程中需要注意的问题"></a>搭建过程中需要注意的问题</h1><ul>
<li>在 GitHub 上创建项目时，项目名必须是【你的 GitHub 用户名.github.io】，如：我的 GitHub 用户名为 KarenChia，那么项目的名称为【KarenChia.github.io】</li>
<li>在 Hexo 的站点配置文件 【_config.yml】中的配置信息，均是以 key: value 形式进行配置，尤其要注意的是在 “:” 与 value 之前存在一个【空格】，如无【空格】，配置的相关属性无效。</li>
<li>在将本地静态页面部署到 GitHub 时，仓库地址最好直接选择使用【HTTPS】，如果使用的是【SSH】，需要再对【SSH】进行配置，否则本地站点中的静态网页无法部署到 GitHub 上进行托管。</li>
<li>在部署之前，需要先安装 【 hexo-deployer-git】插件，必须确保插件安装成功。</li>
</ul>
<h1 id="博客主题-Butterfly"><a href="#博客主题-Butterfly" class="headerlink" title="博客主题 Butterfly"></a>博客主题 Butterfly</h1><p>后续已将主题修改为 <a href="https://butterfly.js.org/">Butterfly</a></p>
]]></content>
      <categories>
        <category>Hexo独立博客配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Coding</tag>
        <tag>Butterfly</tag>
        <tag>GitHub</tag>
        <tag>个人独立博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Writing Exercise</title>
    <url>/2020/11/16/hexo-writing-exercise/</url>
    <content><![CDATA[<p>Hexo 主题配置的相关命令</p>
<h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sticky: 1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Hexo独立博客配置</category>
      </categories>
      <tags>
        <tag>HexoDemo</tag>
      </tags>
  </entry>
  <entry>
    <title>极光：Unable to get provider cn.jpush.android.service.DownloadProvider</title>
    <url>/2020/11/23/jpush-download-provider/</url>
    <content><![CDATA[<p><strong>转载文章 原文出处：<a href="https://blog.csdn.net/qq_36347817/article/details/88552732">https://blog.csdn.net/qq_36347817/article/details/88552732</a></strong></p>
<p>最近需要将公司以前的项目，安装在一个版本为4.4.2的安卓板子上，准备降级操作。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">报错：java.lang.RuntimeException: Unable to get provider com.amitshekhar.DebugDBInitProvider: java.lang.ClassNotFoundException: Didn&#39;t find class</span><br></pre></td></tr></table></figure>
<p>项目中是由于multiDex配置原因。</p>
<p>因为以前支持版本号为21，现在使用 multidex 需要引入谷歌提供的 android-support-multidex.jar 包。</p>
<p>解决方法：</p>
<p>1.defaultConfig 中添加 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">        ······</span><br><span class="line"> </span><br><span class="line">        multiDexEnabled true</span><br><span class="line"> </span><br><span class="line">        ······</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.dependencies 中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">implementation &#39;com.android.support:multidex:1.0.3&#39;</span><br></pre></td></tr></table></figure>
<p>3.代码中加入支持 multidex 的功能：</p>
<p>重写 Application 的 attachBaseContext 方法。</p>
<p>在该方法里面加入MultiDex.install(this)，这个方法比 Application 的 onCreate 要先执行。 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected void attachBaseContext(Context base)&#123;</span><br><span class="line">    super.attachBaseContext(base);</span><br><span class="line">    MultiDex.install(this);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4.重新运行</p>
]]></content>
      <categories>
        <category>Android开发问题汇总</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>极光</tag>
        <tag>DownloadProvider</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly 最新评论 newest-comments 401/资源加载错误（无法获取资料，请确认相关配置是否正确）</title>
    <url>/2020/11/20/newest-comments/</url>
    <content><![CDATA[<p>集成 Butterfly 博客主题中，在配置最新评论 newest comments 时，根据 Butterfly 的配置文档配置完成后，最新评论一直无法显示，提示错误信息：无法获取资料，请确认相关配置是否正确<br><img src="/imgs/newest-comments-401.jpg"></p>
<p>在网页调试模式下，给出的错误信息大致是：找不到加载的资源 401</p>
<h1 id="newest-comments-的配置信息"><a href="#newest-comments-的配置信息" class="headerlink" title="newest_comments 的配置信息"></a>newest_comments 的配置信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Aside widget - Newest Comments</span><br><span class="line">newest_comments:</span><br><span class="line">  enable: true</span><br><span class="line">  limit: 6</span><br><span class="line">  avatar: true</span><br><span class="line">  leancloud:</span><br><span class="line">    enable: true</span><br><span class="line">    appId: XXX # leancloud application app id</span><br><span class="line">    appKey: XXX # leancloud application app key</span><br><span class="line">    serverURL: XXX # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">    default_avatar: mp #mp&#x2F;identicon&#x2F;monsterid&#x2F;wavatar&#x2F;retro&#x2F;robohash&#x2F;blank</span><br><span class="line">  github_issues:</span><br><span class="line">    enable: true</span><br><span class="line">    repo: </span><br><span class="line">  # disqus:</span><br><span class="line">  #   enable: true</span><br><span class="line">  #   forum:</span><br><span class="line">  #   api_key:</span><br></pre></td></tr></table></figure>

<p>Butterfly 的主题配置文件中是默认从 Valine 、 disqus 评论插件中读取评论信息，由于 disqus 的访问速度太慢，在我的博客中就没有使用 disqus ，故而将其注解。</p>
<p>而问题也就出在这里 。。。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>我在这里做出假设：Butterfly 最新评论的显示，需要在其配置文件中至少配置两种不同类型的评论插件。</p>
<p>上文提到，Butterfly 在最新评论处默认配置的 disqus 插件已被注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># disqus</span><br><span class="line"># https:&#x2F;&#x2F;disqus.com&#x2F;</span><br><span class="line">disqus:</span><br><span class="line">  shortname:</span><br></pre></td></tr></table></figure>
<p>故而，上面这里关于 disqus 的配置是空的。</p>
<p>在网上找了很长时间的资料，无奈，关于当前问题的文章实在是少之又少，也没有什么具体的解决方法。和 Butterfly 作者联系后，也尝试过些方法，还是没有得到解决 。。。</p>
<p>最终，我考虑换其它的评论插件，因为 Butterfly 中集成了很多的评论插件，也方便集成，具体可查看其文档。就当我集成其它插件结束后，运行本地服务时，最新评论显示出来了<br><img src="/imgs/newest-comments-count.png"></p>
<p>这里集成的插件任意选择一种（已集成的插件除外）即可。</p>
<blockquote>
<p>在本地服务运行期间，之前已经集成的插件并未删除。此时，在配置文件中配置了两种评论插件，我这里配置的是 Valine 和 Twikoo。</p>
</blockquote>
<p>具体的问题原因，其实并没有找到，配置到这里后，最新评论能正常显示了，我就结束了配置。如果你有相关的解决方案，欢迎在评论区留下你的宝贵意见 ！！！</p>
<h2 id="Valine-配置信息"><a href="#Valine-配置信息" class="headerlink" title="Valine 配置信息"></a>Valine 配置信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># valine</span><br><span class="line"># https:&#x2F;&#x2F;valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  appId: XXX # leancloud application app id</span><br><span class="line">  appKey: XXX # leancloud application app key</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-CN # i18n: zh-CN&#x2F;zh-TW&#x2F;en&#x2F;ja</span><br><span class="line">  placeholder: 记得留下你的昵称和邮箱....可以快速收到回復 # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail,link # valine comment header info (nick&#x2F;mail&#x2F;link)</span><br><span class="line">  recordIP: false # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN: # emoji CDN</span><br><span class="line">  enableQQ: false # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick&#x2F;mail)</span><br><span class="line">  option:</span><br></pre></td></tr></table></figure>

<h2 id="Twikoo-配置信息"><a href="#Twikoo-配置信息" class="headerlink" title="Twikoo 配置信息"></a>Twikoo 配置信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Twikoo</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;imaegoo&#x2F;twikoo</span><br><span class="line">twikoo: XXX</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo配置问题汇总</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Butterfly</tag>
        <tag>newest-comments</tag>
        <tag>评论</tag>
        <tag>401</tag>
        <tag>资源加载</tag>
      </tags>
  </entry>
  <entry>
    <title>RecyclerView系列 - 如何优雅的实现分割线</title>
    <url>/2020/11/24/recycleview-line/</url>
    <content><![CDATA[<blockquote>
<p>文章欢迎转载，转载请注明出处：文章首发于<a href="https://blog.csdn.net/zhaikun68">【Karen Chia の 程序人生】</a><a href="https://blog.csdn.net/ZhaiKun68/article/details/100591943">RecyclerView系列 - 如何优雅的实现分割线</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190907111120364.gif" alt="在这里插入图片描述"><br>效果图不是我想要的效果，怎么办？</p>
<p>查看关于 RecyclerView 系列的其它文章，总有你想要的效果 ↓↓↓</p>
<h2 id="KarenChia-的-RecyclerView-系列文章"><a href="#KarenChia-的-RecyclerView-系列文章" class="headerlink" title="KarenChia 的 RecyclerView 系列文章"></a>KarenChia 的 RecyclerView 系列文章</h2><p><a href="https://blog.csdn.net/ZhaiKun68/article/details/100557688">RecyclerView系列 - RecyclerView的基本使用</a></p>
<p><a href="https://blog.csdn.net/ZhaiKun68/article/details/100591943">RecyclerView系列 - 如何优雅的实现分割线</a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在 RecyclerView 系列文章中，上一篇我们说到了 RecyclerView 的基本使用，期间提到了 RecyclerView 自身是不能设置分割线的，需要自行设置。本篇文章将从不同的“视角”讲解 RecyclerView 分割线的设置方法，文章建立在上一篇文章【<a href="https://blog.csdn.net/ZhaiKun68/article/details/100557688">RecyclerView系列 - RecyclerView的基本使用</a>】的基础上，如果需要了解 RecyclerView 的基本使用、布局管理器的设置、数据适配器的设置等，请自行查看【<a href="https://blog.csdn.net/ZhaiKun68/article/details/100557688">RecyclerView系列 - RecyclerView的基本使用</a>】</p>
<h1 id="1-RecyclerView-分割线设置方式一"><a href="#1-RecyclerView-分割线设置方式一" class="headerlink" title="1 RecyclerView 分割线设置方式一"></a>1 RecyclerView 分割线设置方式一</h1><h6 id="更改列表子项-item-布局"><a href="#更改列表子项-item-布局" class="headerlink" title="更改列表子项 item 布局"></a>更改列表子项 item 布局</h6><p>这种方式设置的其实不是 RecyclerView 组件的分割线，只是更改了 item 的布局文件，在视觉效果上达到了分割线的效果。</p>
<p>item 的布局文件如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:layout_height&#x3D;&quot;wrap_content&quot;</span><br><span class="line">    android:background&#x3D;&quot;@android:color&#x2F;white&quot;</span><br><span class="line">    android:orientation&#x3D;&quot;vertical&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;tvData&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;wrap_content&quot;</span><br><span class="line">        android:layout_margin&#x3D;&quot;10dp&quot;</span><br><span class="line">        android:textColor&#x3D;&quot;@android:color&#x2F;black&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;viewDivider&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;1dp&quot;</span><br><span class="line">        android:background&#x3D;&quot;@android:color&#x2F;holo_red_dark&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<p>这里在原有文件的基础上，新增了 View 组件，用于实现视觉效果上的分割线。</p>
<p>可设置水平分割线的高度及颜色，更改 View 组件的相关属性即可。</p>
<p>这样的设置方法，在列表的最后一项是带有分割线的，需要在 adapter 的数据与视图进行绑定的方法中，控制 View 组件的显示与隐藏：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 将数据与 item 视图进行绑定</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Override</span><br><span class="line">public void onBindViewHolder(@NonNull RecyclerViewTestViewHolder holder, int position) &#123;</span><br><span class="line">    &#x2F;&#x2F;最后一项 item 不显示分割线</span><br><span class="line">    if (position &#x3D;&#x3D; testDataList.size() - 1) &#123;</span><br><span class="line">        holder.viewDivider.setVisibility(View.GONE);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        holder.viewDivider.setVisibility(View.VISIBLE);</span><br><span class="line">    &#125;</span><br><span class="line">    holder.tvData.setText(testDataList.get(position));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-RecyclerView-分割线设置方式二"><a href="#2-RecyclerView-分割线设置方式二" class="headerlink" title="2 RecyclerView 分割线设置方式二"></a>2 RecyclerView 分割线设置方式二</h1><h6 id="使用-Android-自带的分割线"><a href="#使用-Android-自带的分割线" class="headerlink" title="使用 Android 自带的分割线"></a>使用 Android 自带的分割线</h6><p>RecyclerView 提供了 addItemDecoration(@NonNull ItemDecoration decor) 方法，可用于设置系统默认分割线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void addItemDecoration(@NonNull ItemDecoration decor) &#123;</span><br><span class="line">    addItemDecoration(decor, -1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>给 RecyclerView 添加分割线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvTest.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));</span><br></pre></td></tr></table></figure>
<p>这里的 DividerItemDecoration 采用的是 RecyclerView 组件的背景色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:layout_height&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:background&#x3D;&quot;@color&#x2F;app_bg&quot;</span><br><span class="line">    android:orientation&#x3D;&quot;vertical&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;androidx.recyclerview.widget.RecyclerView</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;rvTest&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;match_parent&quot;</span><br><span class="line">        android:background&#x3D;&quot;@android:color&#x2F;holo_red_dark&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190907145121583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poYWlLdW42OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>采用这种方式设置的分割线的高度是系统默认的，我们无法修改分割线的高度。</p>
<h6 id="为了方便修改分割线的高度、颜色，DividerItemDecoration-类提供了-setDrawable-方法，供开发者自定义分割线。"><a href="#为了方便修改分割线的高度、颜色，DividerItemDecoration-类提供了-setDrawable-方法，供开发者自定义分割线。" class="headerlink" title="为了方便修改分割线的高度、颜色，DividerItemDecoration 类提供了 setDrawable() 方法，供开发者自定义分割线。"></a>为了方便修改分割线的高度、颜色，DividerItemDecoration 类提供了 setDrawable() 方法，供开发者自定义分割线。</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Sets the &#123;@link Drawable&#125; for this divider.</span><br><span class="line"> *</span><br><span class="line"> * @param drawable Drawable that should be used as a divider.</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void setDrawable(@NonNull Drawable drawable) &#123;</span><br><span class="line">    if (drawable &#x3D;&#x3D; null) &#123;</span><br><span class="line">        throw new IllegalArgumentException(&quot;Drawable cannot be null.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    mDivider &#x3D; drawable;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建 Drawable 资源文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;shape xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    android:shape&#x3D;&quot;rectangle&quot;&gt;</span><br><span class="line">    &lt;solid android:color&#x3D;&quot;@android:color&#x2F;holo_blue_bright&quot; &#x2F;&gt;</span><br><span class="line">    &lt;size android:height&#x3D;&quot;4dp&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;shape&gt;</span><br></pre></td></tr></table></figure>
<p>为 RecyclerView 设置自定义的分割线样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DividerItemDecoration dividerItemDecoration &#x3D; new DividerItemDecoration(this, DividerItemDecoration.VERTICAL);</span><br><span class="line">dividerItemDecoration.setDrawable(getResources().getDrawable(R.drawable.shape_recycler_view_divider));</span><br><span class="line">rvTest.addItemDecoration(dividerItemDecoration);</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190907145509496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poYWlLdW42OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>稍微复杂一点的，可以为分割线定义渐变色，修改 Drawable 资源文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;shape xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    android:shape&#x3D;&quot;rectangle&quot;&gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">        android:centerColor&#x3D;&quot;@android:color&#x2F;holo_blue_bright&quot;</span><br><span class="line">        android:endColor&#x3D;&quot;@android:color&#x2F;background_dark&quot;</span><br><span class="line">        android:startColor&#x3D;&quot;@android:color&#x2F;holo_red_dark&quot; &#x2F;&gt;</span><br><span class="line">    &lt;size android:height&#x3D;&quot;4dp&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;shape&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190907145942185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poYWlLdW42OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="3-RecyclerView-分割线设置方式三"><a href="#3-RecyclerView-分割线设置方式三" class="headerlink" title="3 RecyclerView 分割线设置方式三"></a>3 RecyclerView 分割线设置方式三</h1><h6 id="利用-item-与-RecyclerView-之间的-Margin，达到显示分割线的效果，分割线的颜色为-RecyclerView-的背景色。"><a href="#利用-item-与-RecyclerView-之间的-Margin，达到显示分割线的效果，分割线的颜色为-RecyclerView-的背景色。" class="headerlink" title="利用 item 与 RecyclerView 之间的 Margin，达到显示分割线的效果，分割线的颜色为 RecyclerView 的背景色。"></a>利用 item 与 RecyclerView 之间的 Margin，达到显示分割线的效果，分割线的颜色为 RecyclerView 的背景色。</h6><p>在 RecyclerView 适配器中的 onCreateViewHolder()方法中，加载 item 布局时进行设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 加载 item 的布局文件</span><br><span class="line"> *&#x2F;</span><br><span class="line">@NonNull</span><br><span class="line">@Override</span><br><span class="line">public RecyclerViewTestViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) &#123;</span><br><span class="line">    View view &#x3D; LayoutInflater.from(mContext).inflate(R.layout.item_recycler_view_test, parent, false);</span><br><span class="line">    RecyclerView.LayoutParams layoutParams &#x3D; (RecyclerView.LayoutParams) view.getLayoutParams();</span><br><span class="line">    layoutParams.bottomMargin &#x3D; 10;</span><br><span class="line">    view.setLayoutParams(layoutParams);</span><br><span class="line">    return new RecyclerViewTestViewHolder(view);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190907151552852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poYWlLdW42OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="4-RecyclerView-分割线设置方式四"><a href="#4-RecyclerView-分割线设置方式四" class="headerlink" title="4 RecyclerView 分割线设置方式四"></a>4 RecyclerView 分割线设置方式四</h1><p>在之前提到的使用 Android 默认的方式来设置分割线的方法中，可以看到 DividerItemDecoration 类继承了 RecyclerView.ItemDecoration，那么我们也可以继承 RecyclerView.ItemDecoration，从而实现自己的分割线。</p>
<p>先看下源码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * An ItemDecoration allows the application to add a special drawing and layout offset</span><br><span class="line"> * to specific item views from the adapter&#39;s data set. This can be useful for drawing dividers</span><br><span class="line"> * between items, highlights, visual grouping boundaries and more.</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt;All ItemDecorations are drawn in the order they were added, before the item</span><br><span class="line"> * views (in &#123;@link ItemDecoration#onDraw(Canvas, RecyclerView, RecyclerView.State) onDraw()&#125;</span><br><span class="line"> * and after the items (in &#123;@link ItemDecoration#onDrawOver(Canvas, RecyclerView,</span><br><span class="line"> * RecyclerView.State)&#125;.&lt;&#x2F;p&gt;</span><br><span class="line"> *&#x2F;</span><br><span class="line">public abstract static class ItemDecoration &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Draw any appropriate decorations into the Canvas supplied to the RecyclerView.</span><br><span class="line">     * Any content drawn by this method will be drawn before the item views are drawn,</span><br><span class="line">     * and will thus appear underneath the views.</span><br><span class="line">     *</span><br><span class="line">     * @param c Canvas to draw into</span><br><span class="line">     * @param parent RecyclerView this ItemDecoration is drawing into</span><br><span class="line">     * @param state The current state of RecyclerView</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public void onDraw(@NonNull Canvas c, @NonNull RecyclerView parent, @NonNull State state) &#123;</span><br><span class="line">        onDraw(c, parent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * @deprecated</span><br><span class="line">     * Override &#123;@link #onDraw(Canvas, RecyclerView, RecyclerView.State)&#125;</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Deprecated</span><br><span class="line">    public void onDraw(@NonNull Canvas c, @NonNull RecyclerView parent) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Draw any appropriate decorations into the Canvas supplied to the RecyclerView.</span><br><span class="line">     * Any content drawn by this method will be drawn after the item views are drawn</span><br><span class="line">     * and will thus appear over the views.</span><br><span class="line">     *</span><br><span class="line">     * @param c Canvas to draw into</span><br><span class="line">     * @param parent RecyclerView this ItemDecoration is drawing into</span><br><span class="line">     * @param state The current state of RecyclerView.</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public void onDrawOver(@NonNull Canvas c, @NonNull RecyclerView parent,</span><br><span class="line">            @NonNull State state) &#123;</span><br><span class="line">        onDrawOver(c, parent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * @deprecated</span><br><span class="line">     * Override &#123;@link #onDrawOver(Canvas, RecyclerView, RecyclerView.State)&#125;</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Deprecated</span><br><span class="line">    public void onDrawOver(@NonNull Canvas c, @NonNull RecyclerView parent) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * @deprecated</span><br><span class="line">     * Use &#123;@link #getItemOffsets(Rect, View, RecyclerView, State)&#125;</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Deprecated</span><br><span class="line">    public void getItemOffsets(@NonNull Rect outRect, int itemPosition,</span><br><span class="line">            @NonNull RecyclerView parent) &#123;</span><br><span class="line">        outRect.set(0, 0, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Retrieve any offsets for the given item. Each field of &lt;code&gt;outRect&lt;&#x2F;code&gt; specifies</span><br><span class="line">     * the number of pixels that the item view should be inset by, similar to padding or margin.</span><br><span class="line">     * The default implementation sets the bounds of outRect to 0 and returns.</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * If this ItemDecoration does not affect the positioning of item views, it should set</span><br><span class="line">     * all four fields of &lt;code&gt;outRect&lt;&#x2F;code&gt; (left, top, right, bottom) to zero</span><br><span class="line">     * before returning.</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * If you need to access Adapter for additional data, you can call</span><br><span class="line">     * &#123;@link RecyclerView#getChildAdapterPosition(View)&#125; to get the adapter position of the</span><br><span class="line">     * View.</span><br><span class="line">     *</span><br><span class="line">     * @param outRect Rect to receive the output.</span><br><span class="line">     * @param view    The child view to decorate</span><br><span class="line">     * @param parent  RecyclerView this ItemDecoration is decorating</span><br><span class="line">     * @param state   The current state of RecyclerView.</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public void getItemOffsets(@NonNull Rect outRect, @NonNull View view,</span><br><span class="line">            @NonNull RecyclerView parent, @NonNull State state) &#123;</span><br><span class="line">        getItemOffsets(outRect, ((LayoutParams) view.getLayoutParams()).getViewLayoutPosition(),</span><br><span class="line">                parent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ItemDecoration  类包含了三个主要的方法：onDraw()、onDrawOver()、getItemOffsets()</p>
]]></content>
      <categories>
        <category>Android开发基础</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>RecycleView</tag>
        <tag>分割线</tag>
        <tag>divider</tag>
      </tags>
  </entry>
  <entry>
    <title>Valine评论插件报错：Code 403</title>
    <url>/2020/11/17/valine-code-403/</url>
    <content><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在使用 Hexo 搭建博客过程中，集成了 Valine 评论插件，本地使用时正常，将项目部署至静态网站后，Valine 插件在页面使用处提示 Code 403错误。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code 403: Access denied by API domain white list, Please check your security domain.</span><br></pre></td></tr></table></figure>

<p>大致意思是：访问被api域名白名单拒绝，请检查你的安全域名设置</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在 <a href="https://www.leancloud.cn/">LeanCloud</a> 的【应用 &gt; 设置 &gt; 安全中心 &gt; Web安全域名】中添加新的自定义域名即可解决该问题。</p>
<p>此处【新的自定义域名】指的是：你的博客的访问域名。</p>
<p><strong>安全域名的具体添加方式根据 LeanCloud 的要求添加即可。</strong><br><img src="/imgs/valine-code-403-doman.png"></p>
]]></content>
      <categories>
        <category>Hexo配置问题汇总</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Valine插件</tag>
        <tag>Code 403</tag>
      </tags>
  </entry>
  <entry>
    <title>Android WebView 加载闪退问题处理（Error inflating class android.webkit.WebView）</title>
    <url>/2020/11/24/webview-load-crash/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在布局文件中直接使用 WebView ，Activity 运行时，APP崩溃</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:layout_height&#x3D;&quot;match_parent&quot;</span><br><span class="line">    android:background&#x3D;&quot;@color&#x2F;appBg&quot;</span><br><span class="line">    android:orientation&#x3D;&quot;vertical&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;WebView</span><br><span class="line">        android:id&#x3D;&quot;@+id&#x2F;webView&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;match_parent&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<h2 id="关键异常"><a href="#关键异常" class="headerlink" title="关键异常"></a>关键异常</h2><p>1 Caused by: android.view.InflateException: Binary XML file line #8: Error inflating class android.webkit.WebView</p>
<p>2 Caused by: android.content.res.Resources$NotFoundException: String resource ID #0x2040003</p>
<h1 id="异常问题分析"><a href="#异常问题分析" class="headerlink" title="异常问题分析"></a>异常问题分析</h1><p>简要概述为：</p>
<p>系统 WebView 出现了问题</p>
<p>一般是特殊机型或刷机后导致系统WebView被卸载或文件缺失的情况</p>
<p>也有者为系统WebView为64位的，并不支持</p>
<p>推荐以下两篇博客，写的很详细</p>
<p><a href="https://blog.csdn.net/hmmhhmmhmhhm/article/details/78072108">解决用WebView去加载网页在部分手机上闪退问题</a></p>
<p><a href="https://stackoverflow.com/questions/41025200/android-view-inflateexception-error-inflating-class-android-webkit-webview">android.view.InflateException Error inflating class android.webkit.WebView</a></p>
<h1 id="解决方案汇总"><a href="#解决方案汇总" class="headerlink" title="解决方案汇总"></a>解决方案汇总</h1><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>在 app 下的 build.gradle 配置文件中，将 androidx.appcompat:appcompat 的版本改为 1.0.2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">implementation &#39;androidx.appcompat:appcompat:1.0.2&#39;</span><br></pre></td></tr></table></figure>
<h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>在 AndroidManifest.xml 文件的 application 标签下增加如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta-data</span><br><span class="line">           android:name&#x3D;&quot;android.webkit.WebView.EnableSafeBrowsing&quot;</span><br><span class="line">           android:value&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h2><p>使用第三方的浏览器内核</p>
<p>如腾讯提供的浏览器内核SDK</p>
]]></content>
      <categories>
        <category>Android开发问题汇总</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Webview</tag>
        <tag>加载闪退问题处理</tag>
        <tag>崩溃</tag>
      </tags>
  </entry>
</search>
